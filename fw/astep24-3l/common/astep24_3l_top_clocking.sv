




/*
    Generated by HDL Build
*/
module astep24_3l_top_clocking (
    output wire				clk_100,
    output wire				clk_100_resn,
    output wire				clk_core,
    output wire				clk_core_resn,
    output wire				clk_sample,
    output wire				clk_sample_resn,
    output wire				clk_timestamp,
    output wire				clk_timestamp_resn,
    output wire				clk_uart,
    output wire				clk_uart_resn,
    input  wire				cold_resn_in,
    output wire				io_aresn,
    input  wire				sysclk_in,
    input  wire				warm_resn_in
);

    // Connections
    //----------------
    wire pll_locked; // size=1 

    // Sections
    //---------------
    assign io_aresn = pll_locked;

    // Instances
    //------------
        
    // Module Instance
    top_clocking_core_io_uart  top_clocking_core_io_uart_I(
        .clk_100(clk_100),
        .clk_core(clk_core),
        .clk_in1(sysclk_in),
        .clk_sample(clk_sample),
        .clk_timestamp(clk_timestamp),
        .clk_uart(clk_uart),
        .locked(pll_locked),
        .power_down(!cold_resn_in),
        .resetn(cold_resn_in)
    );
            
    
    // Module Instance
    reset_sync #(.RESET_DELAY(15)) clk_100_resetsync(
        .clk(clk_100),
        .resn_in(pll_locked && warm_resn_in && cold_resn_in),
        .resn_out(clk_100_resn)
    );
            
    
    // Module Instance
    reset_sync #(.RESET_DELAY(15)) clk_uart_resetsync(
        .clk(clk_uart),
        .resn_in(pll_locked && warm_resn_in && cold_resn_in),
        .resn_out(clk_uart_resn)
    );
            
    
    // Module Instance
    reset_sync #(.RESET_DELAY(15)) clk_core_resetsync(
        .clk(clk_core),
        .resn_in(pll_locked && warm_resn_in && cold_resn_in),
        .resn_out(clk_core_resn)
    );
            
    
    // Module Instance
    reset_sync #(.RESET_DELAY(5)) clk_sample_resetsync(
        .clk(clk_sample),
        .resn_in(pll_locked && warm_resn_in && cold_resn_in),
        .resn_out(clk_sample_resn)
    );
            
    
    // Module Instance
    reset_sync #(.RESET_DELAY(5)) clk_timestamp_resetsync(
        .clk(clk_timestamp),
        .resn_in(pll_locked && warm_resn_in && cold_resn_in),
        .resn_out(clk_timestamp_resn)
    );
                

endmodule

        
